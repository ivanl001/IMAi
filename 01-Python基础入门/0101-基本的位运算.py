# >> 二进制右移， 相当于把末尾一位去掉，其他向右移动一位，相当于除以二并舍弃余数（如果有余数）
# << 二进制左移， 相当于总体向左移一位， 末尾补零， 相当于乘以二
# &  位于， 比较位是否同为1， 相同为1则取1， 不同则取零
# |  位或， 比较是否任何一个有1， 有1就取1， 否则取零

print(3<<4)#向左移动四位，相当于把3乘以2的4次方，也就是3*16

print(42>>3)#向右移动3位，相当于除以8，并舍弃余数，也就是42/8

#这里判断是否是2的幂次方
#2的幂次方最左一定为1， 其余为0， 减去1则最左为0， 其余为1， 进行位与运算刚好为零
def is_pow2(n):
    return (n & (n-1)) == 0
print(is_pow2(2))
print(is_pow2(4))
print(is_pow2(55))

#这里判断是否是偶数
#偶数只需要判断二进制最后一位是否是0， 所以和1进行位与运算，取得的就是最后一位的值，如果是0， 说明是偶数，否则为奇数
def is_odd(n):
    return (n & 1) == 0
print(is_odd(2))
print(is_odd(5))
print(is_odd(8))



